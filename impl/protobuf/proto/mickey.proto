syntax = "proto3";

package mickey;

/*
 * ClusterManagement Service
 */
service ClusterManagement {
    rpc NodeList (NodeListRequest) returns (NodeListReply);
    rpc NodeShow (NodeShowRequest) returns (NodeShowReply);
}

// Node Messages
message Node {
    uint32 id = 1;
    string rpcAddr = 2;
    string xferAddr = 3;
}

message NodeListRequest {
}

message NodeListReply {
    repeated Node nodes = 1;
}

message NodeShowRequest {
    uint32 id = 1;
}

message NodeShowReply {
    Node node = 1;
}

/*
 * DataManagement Service
 */
service DataManagement {
    rpc FillAll (FillAllRequest) returns (FillAllReply);
    rpc Fill (FillRequest) returns (FillReply);
    rpc Load (LoadRequest) returns (LoadReply);
    rpc SearchAll (SearchAllRequest) returns (SearchAllReply);
    rpc Search (SearchRequest) returns (SearchReply);
    rpc SplitAll (SplitAllRequest) returns (SplitAllReply);
    rpc Split (SplitRequest) returns (SplitReply);
    rpc TaskListAll (TaskListAllRequest) returns (TaskListAllReply);
    rpc TaskList (TaskListRequest) returns (TaskListReply);
    rpc TaskShow (TaskShowRequest) returns (TaskShowReply);
}

// Fill Messages
message FillAllRequest {
    string band = 1;
    string geohash = 2;
    string platform = 3;
    uint32 threadCount = 4;
    int64 windowSeconds = 5;
}

message FillAllReply {
    map<uint32, FillReply> nodes = 1;
}

message FillRequest {
    string band = 1;
    string geohash = 2;
    string platform = 3;
    uint32 threadCount = 4;
    int64 windowSeconds = 5;
}

message FillReply {
    uint64 taskId = 1;
}

// Load Messages
enum LoadFormat {
    LANDSAT = 0;
    SENTINEL = 1;
}

message LoadRequest {
    string directory = 1;
    LoadFormat loadFormat = 2;
    uint32 precision = 3;
    uint32 threadCount = 4;
}

message LoadReply {
    uint64 task_id = 1;
}

// Search Messages
message Image {
    string band = 1;
    double coverage = 2;
    string dataset = 3;
    int64 endDate = 4;
    string geohash = 5;
    string path = 6;
    string platform = 7;
    int64 startDate = 8;
}

message SearchAllRequest {
    string band = 1;
    string dataset = 2;
    string geohash = 3;
    string platform = 4;
}

message SearchAllReply {
    map<uint32, SearchReply> nodes = 1;
}

message SearchRequest {
    string band = 1;
    string dataset = 2;
    string geohash = 3;
    string platform = 4;
}

message SearchReply {
    repeated Image images = 1;
}

// Split Messages
message SplitAllRequest {
    string band = 1;
    string geohash = 2;
    string platform = 3;
    uint32 precision = 4;
    uint32 threadCount = 5;
}

message SplitAllReply {
    map<uint32, SplitReply> nodes = 1;
}

message SplitRequest {
    string band = 1;
    string geohash = 2;
    string platform = 3;
    uint32 precision = 4;
    uint32 threadCount = 5;
}

message SplitReply {
    uint64 taskId = 1;
}


// Task Messages
message Task {
    uint64 id = 1;    
    float completion_percent = 2;
    TaskStatus status = 3;
}

enum TaskStatus {
    COMPLETE = 0;
    FAILURE = 1;
    RUNNING = 2;
}

message TaskListAllRequest {
}

message TaskListAllReply {
    map<uint32, TaskListReply> nodes = 1;
}

message TaskListRequest {
}

message TaskListReply {
    repeated Task tasks = 1;
}

message TaskShowRequest {
    uint64 id = 1;
}

message TaskShowReply {
    Task task = 1;
}
